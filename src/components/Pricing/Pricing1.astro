---
/**
 * * pricing sections with toggle for monthly or yearly payments
 * This is designed for 3 pricing items, but can be modified to support more
 */

import { Icon } from "astro-icon";

// components
import Button from "@components/Button/Button.astro";

interface pricingItem {
  name: string; // plan name
  description: string; // plan description
  featured?: boolean; // if true, will be highlighted or otherwise featured
  price: {
    monthly: number; // monthly price if paid by month
    yearly: number; // monthly price if paid by year
  };
  features: string[]; // list of features
}

// This is designed for 3 pricing items, but can be modified to support more
const pricingData: pricingItem[] = [
  {
    name: "Basic",
    description: "For startups and small businesses",
    price: {
      monthly: 12,
      yearly: 10,
    },
    features: [
      "All features",
      "1 user",
      "5 GB cloud storage",
      "100 GB bandwidth",
      "Support",
    ],
  },
  {
    name: "Professional",
    description: "For growing businesses",
    featured: true,
    price: {
      monthly: 60,
      yearly: 50,
    },
    features: [
      "All features",
      "5 users",
      "50 GB cloud storage",
      "1 TB bandwidth",
      "Priority support",
    ],
  },
  {
    name: "Enterprise",
    description: "For next level companies",
    price: {
      monthly: 120,
      yearly: 100,
    },
    features: [
      "All features",
      "unlimited users",
      "500 GB cloud storage",
      "Unlimited bandwidth",
      "Enhanced priority support",
      "API access",
    ],
  },
];
---

<section id="pricing" class="my-24 overflow-hidden md:my-36">
  <div class="container relative">
    <div class="flex justify-center">
      <p class="colored-title inline">Pricing</p>
    </div>
    <h2 class="h2 mt-8 text-center">A plan for every business</h2>

    <!-- Toggle switch for monthly or yearly pricing -->
    <div class="mt-6 flex justify-center">
      <label
        for="pricing-plan__toggle"
        class="relative inline-flex cursor-pointer select-none items-center"
      >
        <input
          type="checkbox"
          name="pricing-plan__toggle"
          id="pricing-plan__toggle"
          class="pricing-plan__toggle sr-only"
          aria-label="Toggle between monthly and yearly pricing"
        />
        <span class="label flex items-center text-sm">Monthly</span>
        <span
          class="pricing-plan__slider mx-4 flex h-7 w-[56px] items-center rounded-full border border-base-300 bg-base-100 p-1 duration-200 dark:border-base-600/60 dark:bg-base-800"
        >
          <span
            class="pricing-plan__dot h-5 w-5 rounded-full bg-base-800 duration-200 dark:bg-base-100"
          ></span>
        </span>
        <span class="label flex items-center text-sm">Yearly</span>
      </label>
    </div>

    <!-- works for 3 pricing plans, adjust grid and max-w here to support more or less -->
    <div
      class="mx-auto mt-12 grid w-full max-w-6xl gap-6 sm:grid-cols-2 lg:grid-cols-3"
    >
      {
        pricingData.map((plan) => (
          // pricing cards
          <div
            class="pricing-plan relative mx-auto h-full w-full max-w-sm overflow-hidden rounded-2xl"
            class:list={[
              {
                "bg-gradient-to-br from-primary-400 to-base-300 to-40% dark:from-primary-500 dark:to-base-600/60":
                  plan.featured === true,
              },
              {
                "bg-base-300 dark:bg-base-600/60": plan.featured !== true,
              },
            ]}
          >
            <div class="relative h-full p-px">
              <div class="relative z-10 flex h-full flex-col overflow-hidden rounded-[calc(1rem-1px)] bg-base-200 dark:bg-base-800">
                {plan.featured === true && (
                  // inside card glow for featured
                  <div
                    class="absolute left-0 top-0 -z-10 mx-auto aspect-square w-full max-w-7xl -translate-x-1/2 -translate-y-1/2 rounded-full bg-primary-300/40 blur-3xl dark:bg-primary-600/20"
                    aria-hidden="true"
                  />
                )}
                <div class="mx-auto flex h-full w-full max-w-[20rem] flex-col px-6 pb-6">
                  <div class="flex w-full justify-between pt-6">
                    <h3
                      class:list={[
                        "text-lg font-semibold",
                        {
                          "main-text-gradient": plan.featured === true,
                        },
                      ]}
                    >
                      {plan.name}
                    </h3>
                    {plan.featured === true && (
                      // featured tag
                      <div class="flex w-full items-center justify-end">
                        <div class="flex gap-2 rounded-full bg-primary-600 px-3 py-1 text-sm text-base-100">
                          <p class="flex items-center">Most popular</p>
                        </div>
                      </div>
                    )}
                  </div>
                  <div class="pt-3">
                    <p class="opacity-90 dark:opacity-80">{plan.description}</p>
                    <p class="mt-3 font-semibold">
                      <div class="pricing-plan__monthly-price">
                        <span class="text-5xl font-semibold text-primary-600 dark:text-primary-400">
                          ${plan.price.monthly}
                        </span>
                        <span class="text-3xl">/mo</span>
                        <br />
                        <p class="mt-1 text-sm font-normal opacity-70">
                          (paid monthly)
                        </p>
                      </div>
                      <div class="pricing-plan__yearly-price hidden">
                        <span class="text-5xl font-semibold text-primary-600 dark:text-primary-400">
                          ${plan.price.yearly}
                        </span>
                        <span class="text-3xl">/mo</span>
                        <br />
                        <p class="mt-1 text-sm font-normal opacity-70">
                          (paid yearly)
                        </p>
                      </div>
                    </p>
                  </div>
                  <ul class="my-6 flex w-full flex-col gap-2">
                    {plan.features.map((feature) => (
                      <li
                        class:list={[
                          "flex items-center",
                          {
                            "text-base-700 dark:text-base-300":
                              plan.featured !== true,
                          },
                        ]}
                      >
                        <Icon
                          name="tabler:check"
                          class="h-5 w-5 text-primary-600 dark:text-primary-400"
                          aria-hidden="true"
                        />
                        <span class="ml-2 inline">{feature}</span>
                      </li>
                    ))}
                  </ul>
                  <div class="mt-auto">
                    <Button
                      variant={plan.featured === true ? "primary" : "outline"}
                      href="/signup/"
                    >
                      Get Started
                    </Button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>

<script>
  function pricingPlanToggleSetup() {
    // toggle between monthly and yearly pricing
    const pricingToggle = document.querySelector(
      ".pricing-plan__toggle",
    ) as HTMLInputElement;

    const pricingToggleSlider = document.querySelector(
      ".pricing-plan__slider",
    ) as HTMLInputElement;

    const pricingToggleDot = document.querySelector(
      ".pricing-plan__dot",
    ) as HTMLInputElement;

    // each pricing plan has a monthly price and a yearly price
    const pricingPlans = document.querySelectorAll(
      ".pricing-plan",
    ) as NodeListOf<HTMLElement>;

    // each plan has monthly and yearly price
    pricingPlans.forEach((pricingPlan) => {
      const monthlyPrice = pricingPlan.querySelector(
        ".pricing-plan__monthly-price",
      ) as HTMLElement;

      const yearlyPrice = pricingPlan.querySelector(
        ".pricing-plan__yearly-price",
      ) as HTMLElement;

      if (
        pricingToggle &&
        pricingToggleDot &&
        pricingToggleSlider &&
        monthlyPrice &&
        yearlyPrice
      ) {
        pricingToggle.addEventListener("change", (event) => {
          if (pricingToggle.checked) {
            // if checked, then yearly price
            monthlyPrice.classList.add("hidden");
            yearlyPrice.classList.remove("hidden");
            pricingToggleDot.classList.add("translate-x-[26px]");
            pricingToggleSlider.classList.add("border-primary-400");
            pricingToggleSlider.classList.add("dark:border-primary-600");
          } else {
            // if unchecked, then monthly price
            monthlyPrice.classList.remove("hidden");
            yearlyPrice.classList.add("hidden");
            pricingToggleDot.classList.remove("translate-x-[26px]");
            pricingToggleSlider.classList.remove("border-primary-400");
            pricingToggleSlider.classList.remove("dark:border-primary-600");
          }
        });
      }
    });
  }

  // runs on initial page load
  pricingPlanToggleSetup();

  // runs on view transitions navigation
  document.addEventListener("astro:after-swap", pricingPlanToggleSetup);
</script>
